library(swirl)
swirl()
table(airquality$Month)
boxplot(Ozone~Month, data = airquality)
boxplot(Ozone~Month, data = airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, Month == 5)
?pch
points(may, col = "blue", pch = 2)
points(may, col = "blue", pch = 17)
points(may$Wind, may$Ozone col = "blue", pch = 17)
points(may$Wind, may$Ozone, col = "blue", pch = 17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col = "blue", pch = 18)
points(notmay$Wind, notmay$Ozone, col = "blue", pch = 8)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
legend("topright", pch = c(17,8), col = c("blue", "red"), legend = c("May", "Other Months"))
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(nfrow = c(1,3) mar = c(4, 4, 2, 1), oma = c(0,0,2,0))
par(nfrow = c(1,3), mar = c(4, 4, 2, 1), oma = c(0,0,2,0))
par(mfrow = c(1,3), mar = c(4, 4, 2, 1), oma = c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
setwd("~/ExData_Plotting1")
data <- read.table("household_power_consumption.txt")
head(data)
names(data)
remove(data)
data <- read.table("household_power_consumption.txt", sep = ";")
head(data)
dmy
dmy()
install.packages("datetime")
library(datetime)
dmy("7/7/2020")
install.packages("lubridate")
library(lubridate)
dmy("7/7/2020")
head(data)
dmy(data[,1])
sum(is.na(data[,1]))
remove(data)
data <- read.table("household_power_consumption.txt", sep = ";", na.strings = "?")
sum(is.na(data[,1]))
dmy(data[,1])
data[,1] <- dmy(data[,1])
data[,1]
names(data)
data <- read.table("household_power_consumption.txt", sep = ";", na.strings = "?", col.names = 1)
head(data)
data <- read.table("household_power_consumption.txt", sep = ";", na.strings = "?")
data[1,]
names(data) <- data[1,]
data = data[-1, -1]
data
head(data)
data <- read.table("household_power_consumption.txt", sep = ";", na.strings = "?")
names(data) <- data[1,]
data <- data[-1,]
head(data)
dmy(data[,1])
names(date)
names(data)
subset(data, Date >= ymd("2007-02-01") & Date <= ymd("2007-02-02"))
data <- read.table("household_power_consumption.txt", sep = ";", na.strings = "?")
names(data) <- data[1,]
data[,1] <- as.Date(data[,1])
data[1,1]
data <- data[-1,]
data[,1] <- as.Date(data[,1])
data[1,1]
remove(data)
data <- read.table("household_power_consumption.txt", sep = ";", na.strings = "?")
names(data) <- data[1,]
data <- data[-1,]
data[1,1]
strptime(data[1,1])
strptime(data[1,1], "dd/mm/yyyy")
strptime(data[1,1], "DD/MM/YYYY")
?strptime
strptime(data[1,1], "%d/%m/%y")
as.Date(strptime(data[1,1], "%d/%m/%y"))
data[,1] <- > as.Date(strptime(data[,1], "%d/%m/%y"))
data[,1] <- as.Date(strptime(data[,1], "%d/%m/%y"))
as.Date("02/02/2007")
as.Date("2007/02/02")
test <- subset(data, Date >= as.Date("2007/02/01") & Date <= as.Date("2007/02/02"))
test
data$Date
test <- subset(data, Date >= "2007/02/01" & Date <= "2007/02/02")
test
class(data[1,1])
class(as.Date("2007-02-02"))
as.Date("2007-02-02") < as.Date("2007-02-02")
as.Date("2007-02-02") < as.Date("2007-02-03")
test <- subset(data, Date >= as.Date("2007/02/01)" & Date <= as.Date("2007/02/02"))
)
test <- subset(data, Date >= as.Date("2007-02-01)" & Date <= as.Date("2007-02-02"))
)
test <- subset(data, Date >= as.Date("2007-02-01") & Date <= as.Date("2007-02-02"))
test
test <- data[ data$Date >= as.Date("2007-02-01") & data$Date <= as.Date("2007-02-02"),]
test
data[1,1]
data[1,600]
data[600,1]
data <- read.table("household_power_consumption.txt", sep = ";", na.strings = "?")
names(data) <- data[1,]
data <- data[-1,]
data[,1] <- as.Date(strptime(data[,1], "%d/%m/%y"))
data[1:5,1]
data <- read.table("household_power_consumption.txt", sep = ";", na.strings = "?")
names(data) <- data[1,]
data <- data[-1,]
head(data)
test <- as.Date(strptime(data[,1], "%d/%m/%Y"))
test
data[,1] <- as.Date(strptime(data[,1], "%d/%m/%Y"))
remove(test)
test <- data[ data$Date >= as.Date("2007-02-01") & data$Date <= as.Date("2007-02-02"),]
test
head(test)
data <- subset(data, Date >= as.Date("2007-02-01") & Date <= as.Date("2007-02-02"))
head(data)
with(data, hist(Clobal_active_power))
with(data, hist(Global_active_power))
hist(data$Global_active_power)
hist(as.numeric(data$Global_active_power))
hist(as.numeric(data$Global_active_power), main = "Global Active Power", col = "red")
hist(as.numeric(data$Global_active_power), main = "Global Active Power", col = "red", xlab = "Global Active Power (kilowatts)")
png("plot1.png")
hist(as.numeric(data$Global_active_power), main = "Global Active Power", col = "red", xlab = "Global Active Power (kilowatts)")
dev.off()
plot(data$Global_active_power)
lines(data$Global_active_power)
data$Time
plot(data$Global_active_power, data$Time)
sum(is.na(data$Time))
sum(is.na(data$Global_active_power))
data$DateTime <- as.datetime(data$Date, data$Time)
data$DateTime <- as.datetime(paste0(data$Date, data$Time))
head(data)
as.datetime(paste0(data$Date, data$Time))
paste0(data$Date, data$Time)
as.datetime(paste0(data$Date, " ", data$Time))
as.datetime(strptime(paste0(data$Date, " ", data$Time)))
?strptime
as.datetime(strptime(paste0(data$Date, " ", data$Time), %Y-%m-%d %H:%M:%S))
as.datetime(strptime(paste0(data$Date, " ", data$Time), "%Y-%m-%d %H:%M:%S"))
data$DateTime <- as.datetime(strptime(paste0(data$Date, " ", data$Time), "%Y-%m-%d %H:%M:%S"))
data$DateTime
with(data, plot(Global_active_power, DateTime))
with(data, plot(DateTime, Global_active_power))
plot()
dev.off()
with(data, lines(DateTime, Global_active_power))
plot()
?plot
plot(type = "n")
with(data, plot(DateTime, Global_active_power, type = "n"))
with(data, lines(DateTime, Global_active_power))
class(data$DateTime)
day(data$DateTime)
name(data$DateTime)
dev.off()
with(data, plot(DateTime, Global_active_power, type = "l"))
axis(1, data$DateTime, format(data$DateTime, "%b %d"), cex.axis = .7)
dev.off()
with(data, plot(DateTime, Global_active_power, type = "l"))
axis(1, data$DateTime, format(data$DateTime, "%b %d"), cex.axis = .7)
dev.off()
with(data, plot(format(DateTime, "%b %d"), Global_active_power, type = "l"))
plot(format(data$DateTime, "%b %d"), data$Global_active_power, type = "l")
format(data$DateTime, "%b %d")
plot(DateTime~format(data$DateTime, "%b %d"), data$Global_active_power, type = "l")
plot(format(data$DateTime, "%b %d"), data$Global_active_power, type = "l")
plot(data$DateTime, data$Global_active_power, type = "l")
axis(1)
plot(data$DateTime, data$Global_active_power, type = "l", xaxt = "n")
axis(1, data$DateTime, format(data$DateTime, "%b %d"), cex.axis = .7)
axis(1, data$DateTime, format(data$DateTime, "%b %d"))
dev.off()
plot(data$DateTime, data$Global_active_power, type = "l", xaxt = "n")
axis(1, data$DateTime, format(data$DateTime, "%b %d"))
(1, data$DateTime, format(data$DateTime, "%D"))
axis(1, data$DateTime, format(data$DateTime, "%D"))
dev.off()
plot(data$DateTime, data$Global_active_power, type = "l", xaxt = "n")
axis(1, data$DateTime, format(data$DateTime, "%D"))
axis(1, data$DateTime, weekdays(data$DateTime))
data[1,]
axis(1, data$DateTime, weekdays(data$Date))
plot(data$DateTime, data$Global_active_power, type = "l", xaxt = "n")
axis(1, data$DateTime, weekdays(data$Date))
?axis
axis(1, weekdays(data$Date))
axisaxis(1, data$DateTime, c("a","b","c"))
axis(1, data$DateTime, c("a","b","c"))
axis(1, at = c(data$DateTime[1], data$DateTime[20]), weekdays(data$Date))
axis(1, at = c(data$DateTime[1], data$DateTime[20]), c("1","2")
)
plot(data$DateTime, data$Global_active_power, type = "l", xaxt = "n")
axis(1, at = c(data$DateTime[1], data$DateTime[20]), c("1","2"))
axis(1, at = c(data$DateTime[1], data$DateTime[500]), c("1","2"))
axis(1, at = c(data$DateTime[1], data$DateTime[nrow(data)]), c("1","2"))
axis(1,
at = c(data$DateTime[1],
data$DateTime[nrow(data)/2],
data$DateTime[nrow(data)]),
c("Thursday","Friday", "Saturday"))
remove(list - ls())
remove(list = ls())
source("plot2.R")
dev.off()
source("plot2.R")
source('~/ExData_Plotting1/plot1.R')
source('~/ExData_Plotting1/plot2.R')
source('~/ExData_Plotting1/plot2.R')
dev.off()
source('~/ExData_Plotting1/plot1.R')
source('~/ExData_Plotting1/plot3.R')
dev.off()
plot(data$DateTime,
data$Sub_metering_2,
type = "l",
xaxt = "n",
col = "red",
xlab = "",
ylab = "Global Active Power (kilowatts)")
lines(data$DateTime,
data$Sub_metering_1,
col = "black",)
dev.off()
plot(data$DateTime,
data$Sub_metering_1,
type = "l",
xaxt = "n",
col = "black",
xlab = "",
ylab = "Global Active Power (kilowatts)")
lines(data$DateTime,
data$Sub_metering_2,
col = "red",)
dev.off()
source('~/ExData_Plotting1/plot3.R')
legend(c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c("red", "black", "blue"))
legend(legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c("red", "black", "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c("red", "black", "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c("black", "red", "blue"), pch = c(1,1,1))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c("black", "red", "blue"),
pch = c(1,1,1),
type = "l")
?legend
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c("black", "red", "blue"),
)
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c("black", "red", "blue"), lwd = 1
)
dev.off()
source('~/ExData_Plotting1/plot3.R')
dev.off()
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
par(mfrow = c(2,2))
dev.off()
par(mfrow = c(2,2))
plot(c(1,2), c(3,4))
plot(c(1,2), c(3,4))
plot(c(1,2), c(3,4))
plot(c(1,2), c(3,4))
dev.off()
